angular.module("appModule").run(["$templateCache", function($templateCache) {$templateCache.put("angularCopyExample.html","<div>\n    <span>Original</span>\n    <div>\n        <label>First name</label>\n        <input type=\"text\" ng-model=\"ctrl.originalObject.firstName\">\n    </div>\n    <div>\n        <label>Last name</label>\n        <input type=\"text\" ng-model=\"ctrl.originalObject.lastName\">\n    </div>\n    <span>{{ctrl.originalObject.firstName + \' \' + ctrl.originalObject.lastName}}</span>\n</div>\n<button data-ng-click=\"ctrl.copy();\">Copy</button>\n<div>\n    <span>Copy</span>\n    <div>\n        <label>First name</label>\n        <input type=\"text\" ng-model=\"ctrl.copyObject.firstName\">\n    </div>\n    <div>\n        <label>Last name</label>\n        <input type=\"text\" ng-model=\"ctrl.copyObject.lastName\">\n    </div>\n    <span>{{ctrl.copyObject.firstName + \' \' + ctrl.copyObject.lastName}}</span>\n</div>");
$templateCache.put("angularCopyExample.js","vm.originalObject = {\n    firstName: \'John\',\n    lastName: \'doe\'\n}\n\nvm.copy = copy;\n\nfunction copy(){\n    vm.copyObject = angular.copy(vm.originalObject);\n}\n");
$templateCache.put("biDirectionalBindingExample.html","<div layout=\"column\" layout-align=\"center center\">\n    The current value in the input is: {{ctrl.biDirectionBinding}}\n</div>\n<div layout=\"row\">\n    <div layout layout-align=\"center center\" flex=\"33\" offset=\"33\">\n        <md-input-container>\n            <label>Bound Input</label>\n            <input id=\"biDirectionalInput\"\n                   data-ng-model=\"ctrl.biDirectionBinding\">\n        </md-input-container>\n    </div>\n</div>");
$templateCache.put("biDirectionalBindingExample.js","vm.biDirectionBinding = \'\';\n");
$templateCache.put("combinedDirectiveExample.data.js","var staticData = [\n    {\n        id: 1,\n        name: \'John\'\n    },\n    {\n        id: 2,\n        name: \'Paul\'\n    },\n    {\n        id: 3,\n        name: \'Sam\'\n    },\n    {\n        id: 4,\n        name: \'Geoff\'\n    },\n    {\n        id: 5,\n        name: \'Jerry\'\n    },\n    {\n        id: 6,\n        name: \'Mark\'\n    }\n];\n\n");
$templateCache.put("combinedDirectiveExample.html","<div>\n    <input id=\"filterInput\"\n           data-ng-model=\"ctrl.filterModel\">\n    <span>List of names</span>\n    <ul>\n        <li class=\"md-title\"\n            data-ng-repeat=\"item in ctrl.dataArray | filter: ctrl.filterModel\">{{item.name}}\n        </li>\n    </ul>\n</div>");
$templateCache.put("combinedDirectiveExample.js","vm.dataArray = mainService.getStaticArray();\nvm.filterModel = \'\';");
$templateCache.put("controllerExample.html","<div data-ng-controller=\"DemoController as main\">\n    {{main.demoVariable}}\n</div>\n");
$templateCache.put("controllerExample.js","(function () {\n    \'use strict\';\n\n    angular.module(\'appModule\').controller(\'DemoController\', DemoController);\n\n    DemoController.$inject = [\'mainService\'];\n\n    function DemoController(mainService) {\n\n        var vm = this;\n\n        vm.demoVariable = mainService.getSomeVariable();\n\n    }\n})();");
$templateCache.put("dependencyInjectionExample.js","(function () {\n    \'use strict\';\n\n    angular.module(\'appModule\').controller(\'Session1BaseController\', Session1baseController);\n\n    Session1baseController.$inject = [\'mainService\'];\n\n    function Session1baseController(mainService) {\n      //Do some function here.\n    }\n})();\n");
$templateCache.put("directiveExample.html","<!--templates/qatestdirective.html-->\n<div>\n    <span>{{testDirective.codeKey}}</span>\n    <span>{{testDirective.directiveValue}}</span>\n</div>");
$templateCache.put("directiveExample.js","(function () {\n    \'use strict\';\n\n    angular.module(\'appModule\').directive(\'qaTestDirective\', qaTestDirective);\n\n    function qaTestDirective() {\n        return {\n            restrict: \'EA\',\n            scope: {},\n            controller: qaTestDirectiveController,\n            controllerAs: \'testDirective\',\n            replace: true,\n            bindToController: {\n                codeKey: \'@\'\n            },\n            templateUrl: \'templates/qatestdirective.html\'\n        };\n    }\n\n    qaTestDirectiveController.$inject = [\'mainService\'];\n\n    function qaTestDirectiveController(mainService) {\n        var vm = this;\n\n        vm.directiveValue = mainService.getSomeValue();\n\n    }\n\n})();\n");
$templateCache.put("filterExample.js","(function () {\n    \'use strict\';\n\n    angular.module(\'appModule\').filter(\'booltoyesno\', boolToYesNo);\n\n    function boolToYesNo() {\n        return function (boolValue) {\n            return boolValue ? \'Ja\' : \'Nee\';\n        }\n    }\n\n})();\n");
$templateCache.put("filtersByFieldExample.html","<label>Search name</label>\n<input type=\"text\" ng-model=\"ctrl.filterSearch.name\">\n<div>\n    <ul>\n        <li data-ng-repeat=\"item in ctrl.dataArray | filter:ctrl.filterSearch\">{{item.name}}</li>\n    </ul>\n</div>\n");
$templateCache.put("filtersByFieldExample.js","vm.filterSearch = { name: \'\'};\nvm.dataArray = mainService.getStaticArray();");
$templateCache.put("filtersCapitalizeExample.html","<label>Capitalize at</label>\n<input type=\"text\" ng-model=\"ctrl.capitalizeAt\">\n<span>\n    {{ ctrl.exampleText | capitalize: ctrl.capitalizeAt}}\n</span>");
$templateCache.put("filtersCapitalizeExample.js","//filter definition\n(function(){\n    \'use strict\';\n\n    angular.module(\'appModule\').filter(\'capitalize\', capitalizeFilter);\n\n\n    function capitalizeFilter(){\n        return capitalize;\n    }\n\n    function capitalize(input, char) {\n        if (isNaN(input)) {\n\n            // If the input data is not a number, perform the operations to capitalize the correct letter.\n            var char = char - 1 || 0;\n            var letter = input.charAt(char).toUpperCase();\n            var out = [];\n\n            for (var i = 0; i < input.length; i++) {\n\n                if (i == char) {\n                    out.push(letter);\n                } else {\n                    out.push(input[i]);\n                }\n\n            }\n\n            return out.join(\'\');\n\n        } else {\n            return input;\n        }\n    }\n})();\n\n\n//controller\nvm.capitalizeAt = 0;\nvm.exampleText = \'the quick brown fox jumps over the lazy dog\';\n");
$templateCache.put("filtersDateExample.html","<label>Date</label>\n<input type=\"date\" ng-model=\"ctrl.filterDate\">\\r\\n\' +\n<div>\n    <span>formatted date: {{ctrl.filterDate | date: \"dd-MMMM-yyyy\"}}</span>\n</div>");
$templateCache.put("filtersDateExample.js","vm.filterDate = new Date();");
$templateCache.put("filterServiceExample.html","<div>\n    <span>Uppercase</span>\n    <div>\n        <label>Input text</label>\n        <input type=\"text\" ng-model=\"ctrl.inputUppercase\" data-ng-change=\"ctrl.filterUppercase();\">\n    </div>\n    <span><em>{{ctrl.outputUppercase}}</em></span>\n</div>\n<div>\n    <span>Date</span>\n    <select ng-model=\"ctrl.inputDate\" data-ng-change=\"ctrl.filterDate();\" placeholder=\"Select a format\">\n        <option>dd-MM-yyyy</option>\n        <option>dd-MMMM-yyyy</option>\n        <option>dd-MMM-yyyy hh:mm:ss</option>\n    </select>\n    <span><em>{{ctrl.outputDate}}</em></span>\n</div>\n<div>\n    <span>Ordinal</span>\n    <div>\n        <label>Input number</label>\n        <input type=\"number\" ng-model=\"ctrl.inputOrdinal\" data-ng-change=\"ctrl.filterOrdinal();\">\n    </div>\n    <span><em>{{ctrl.outputOrdinal}}</em></span>\n</div>\n<div>\n    <span>Capitalize</span>\n    <div>\n        <label>Input text</label>\n        <input type=\"text\" ng-model=\"ctrl.inputCapitalize\" data-ng-change=\"ctrl.filterCapitalize();\">\n    </div>\n    <div>\n        <label>Capitalize at</label>\n        <input type=\"number\" ng-model=\"ctrl.inputCapitalizeAt\" data-ng-change=\"ctrl.filterCapitalize();\">\n    </div>\n    <span><em>{{ctrl.outputCapitalize}}</em></span>\n</div>\n");
$templateCache.put("filterServiceExample.js","//uppercase\nvm.inputUppercase = undefined;\nvm.outputUppercase = undefined;\nvm.filterUppercase = filterUppercase;\n\n//date\nvm.inputDate = undefined;\nvm.outputDate = undefined;\nvm.filterDate = filterDate;\n\n//ordinal (custom filter)\nvm.inputOrdinal = undefined;\nvm.outputOrdinal = undefined;\nvm.filterOrdinal = filterOrdinal;\n\n//capitalize (custom filter)\nvm.inputCapitalize = undefined;\nvm.inputCapitalizeAt = undefined;\nvm.outputCapitalize = undefined;\nvm.filterCapitalize = filterCapitalize;\n\n\nfunction filterUppercase() {\n    vm.outputUppercase = $filter(\'uppercase\')(vm.inputUppercase);\n}\n\nfunction filterDate() {\n    vm.outputDate = $filter(\'date\')(new Date(), vm.inputDate);\n}\n\nfunction filterOrdinal() {\n    vm.outputOrdinal = $filter(\'ordinal\')(vm.inputOrdinal);\n}\n\nfunction filterCapitalize() {\n    vm.outputCapitalize = $filter(\'capitalize\')(vm.inputCapitalize, vm.inputCapitalizeAt);\n}");
$templateCache.put("filtersJsonExample.html","{{ctrl.filterJson | json}}");
$templateCache.put("filtersJsonExample.js","vm.filterJson = {name: \'John Doe\', age: 25}");
$templateCache.put("filtersOrderByExample.html","<button data-ng-click=\"ctrl.setFilterOrderBy(\'ASC\')\">Name ASC</button>\n<button data-ng-click=\"ctrl.setFilterOrderBy(\'DESC\')\">Name DESC</button>\n<button data-ng-click=\"ctrl.setFilterOrderBy()\">Reset</button>\n<ul>\n    <li data-ng-repeat=\"item in ctrl.dataArray | orderBy:ctrl.filterOrderBy\">\n        {{item.name}}\n    </li>\n</ul>");
$templateCache.put("filtersOrderByExample.js","vm.filterOrderBy = \'\';\nvm.setFilterOrderBy = setFilterOrderBy;\n\nfunction setFilterOrderBy(sortDirection){\n    var result = \'\';\n    if (sortDirection == \'ASC\')\n    {\n        result = \'+name\';\n    }\n    else if (sortDirection == \'DESC\')\n    {\n        result = \'-name\';\n    }\n    vm.filterOrderBy = result;\n}");
$templateCache.put("filtersOrdinalExample.html","<div>\n    <span>Original</span>\n    <ul>\n        <li data-ng-repeat=\"item in ctrl.numbersArray\">{{item}}</li>\n    </ul>\n</div>\n<div>\n    <span>Filtered</span>\n    <ul>\n        <li data-ng-repeat=\"item in ctrl.numbersArray\">{{item | ordinal}}</li>\n    </ul>\n</div>\n");
$templateCache.put("filtersOrdinalExample.js","//filter definition\n(function(){\n    \'use strict\';\n\n    angular.module(\'appModule\').filter(\'ordinal\', ordinalFilter);\n\n\n    function ordinalFilter(){\n        return ordinal;\n    }\n\n    function ordinal(number) {\n\n        // Ensure that the passed in data is a number\n        if(isNaN(number) || number < 1) {\n\n            // If the data is not a number or is less than one (thus not having a cardinal value) return it unmodified.\n            return number;\n\n        } else {\n\n            // If the data we are applying the filter to is a number, perform the actions to check it\'s ordinal suffix and apply it.\n\n            var lastDigit = number % 10;\n\n            if(lastDigit === 1) {\n                return number + \'st\'\n            } else if(lastDigit === 2) {\n                return number + \'nd\'\n            } else if (lastDigit === 3) {\n                return number + \'rd\'\n            } else if (lastDigit > 3) {\n                return number + \'th\'\n            }\n\n        }\n    }\n})();\n\n\n//controller\nvm.numbersArray = [1,2,3,4,11,767,\'seven\']\n");
$templateCache.put("iffeExample.js","(function () {\n    \'use strict\';\n\n    //Write your code here.\n\n})();\n\n");
$templateCache.put("interpolateExample.html","<div>\n    <label>Template</label>\n    <input type=\"text\" ng-model=\"ctrl.interpolateTemplate\" data-ng-change=\"ctrl.interpolate();\">\n</div>\n<div>\n    <label>firstName</label>\n    <input type=\"text\" ng-model=\"ctrl.interpolateInput.firstName\" data-ng-change=\"ctrl.interpolate();\">\n</div>\n<div>\n    <label>lastName</label>\n    <input type=\"text\" ng-model=\"ctrl.interpolateInput.lastName\" data-ng-change=\"ctrl.interpolate();\">\n</div>\n<span>{{ctrl.interpolateOutput}}</span>\n");
$templateCache.put("interpolateExample.js","vm.interpolateTemplate = \'Hello {{firstName}} {{lastName}}!\';\nvm.interpolateInput = {\n    firstName: \'\',\n    lastName: \'\',\n}\nvm.interpolateOutput = undefined;\nvm.interpolate = interpolate;\n\nfunction interpolate() {\n    vm.interpolateOutput = $interpolate(vm.interpolateTemplate)(vm.interpolateInput);\n}\n");
$templateCache.put("logExample.html","<span>\n    See console(F12) for the log output\n</span>\n<div>\n    <div>\n        <label>Message</label>\n        <input type=\"text\" ng-model=\"ctrl.logMessage\">\n    </div>\n    <div>\n        <button data-ng-click=\"ctrl.log(\'log\');\">Log</button>\n        <button data-ng-click=\"ctrl.log(\'warn\');\">Warning</button>\n        <button data-ng-click=\"ctrl.log(\'info\');\">Info</button>\n        <button data-ng-click=\"ctrl.log(\'error\');\">Error</button>\n        <button data-ng-click=\"ctrl.log(\'debug\');\">Debug</button>\n    </div>\n</div>\n");
$templateCache.put("logExample.js","vm.logMessage = undefined;\nvm.log = log;\n\nfunction log(type) {\n    $log[type](vm.logMessage);\n}\n");
$templateCache.put("moduleExample.html","<body data-ng-app=\"appModule\">");
$templateCache.put("moduleExample.js","(function () {\n    \'use strict\';\n    angular.module(\'appModule\', [\'ngNewRouter\',\'ngMaterial\'])\n        .config(applicationConfig);\n\n    applicationConfig.$inject = [\'$componentLoaderProvider\'];\n\n    function applicationConfig($componentLoaderProvider) {\n\n        $componentLoaderProvider.setTemplateMapping(function (name) {\n\n         //Some config happens here\n\n        });\n    }\n\n})();");
$templateCache.put("ngChangeExample.html","<input id=\"changeInput\"\n       data-ng-change=\"ctrl.recordChange()\"\n       data-ng-model=\"ctrl.changedValue\">");
$templateCache.put("ngChangeExample.js","vm.inputChanges = 0;\n\nvm.recordChange = function(){\n    vm.inputChanges++;\n}\n");
$templateCache.put("ngClassExample.html","<span data-ng-class=\"{\'bold-class\': ctrl.isBoldText, \'normal-class\': !ctrl.isBoldText}\">I am text.</span>\n\n<div layout=\"row\">\n    <button data-ng-click=\"ctrl.isBoldText = true\">Set Bold\n    </button>\n    <button data-ng-click=\"ctrl.isBoldText = false\">Remove Bold\n    </button>\n</div>");
$templateCache.put("ngClassExample.js","vm.isBoldText = false;\n");
$templateCache.put("ngClickExample.html","<span>You have clicked the button {{ctrl.buttonClicks}} times.</span>\n<button data-ng-click=\"ctrl.addButtonClick()\">Add Click</button>");
$templateCache.put("ngClickExample.js","vm.buttonClicks = 0;\n\nvm.addButtonClick = function(){\n    vm.buttonClicks++;\n};\n");
$templateCache.put("ngCloakExample.html","<body data-ng-cloak data-ng-app=\"appModule\" data-ng-controller=\"MainController as main\">");
$templateCache.put("ngHideShowExample.html","<span data-ng-show=\"session1Directives.boolTextTrigger\">I show when the value is truthy.</span>\n<span data-ng-hide=\"session1Directives.boolTextTrigger\">I hide when the value is truthy.</span>\n\n<div layout=\"row\">\n    <button data-ng-click=\"session1Directives.boolTextTrigger = true\">\n        Set trigger to true\n    </button>\n    <button data-ng-click=\"session1Directives.boolTextTrigger = false\">\n        Set trigger to false\n    </button>\n</div>");
$templateCache.put("ngHideShowExample.js","vm.boolTextTrigger = true;\n");
$templateCache.put("ngHrefExample.html","<a target=\"_blank\" data-ng-href=\"{{ctrl.customHref}}\">Go to Qdelft</a>");
$templateCache.put("ngHrefExample.js","vm.customHref = \'http://www.qdelft.nl\';\n");
$templateCache.put("ngIfExample.html","<span data-ng-if=\"session1Directives.renderText\">Can you see me?</span>\n\n<div layout=\"row\">\n    <button data-ng-click=\"session1Directives.renderText = true\">\n        Add Text to DOM\n    </button>\n    <button data-ng-click=\"session1Directives.renderText = false\">\n        Remove Text from DOM\n    </button>\n</div>");
$templateCache.put("ngIfExample.js","vm.renderText = true;");
$templateCache.put("ngModelOptionsExample.html","<div layout=\"column\" layout-align=\"center center\">\n    After blur the value is: {{ctrl.ngModelOptionsValueBlur}}\n</div>\n<div layout=\"row\">\n    <div layout layout-align=\"center center\" flex=\"33\" offset=\"33\">\n        <md-input-container>\n            <label>I bind on blur</label>\n            <input id=\"ngModelOptionsInput1\"\n                   data-ng-model=\"ctrl.ngModelOptionsValueBlur\"\n                   data-ng-model-options=\"{updateOn: \'blur\'}\">\n        </md-input-container>\n    </div>\n</div>\n<div layout=\"column\" layout-align=\"center center\">\n    After 200 ms the value is: {{ctrl.ngModelOptionsValueDebounce}}\n</div>\n<div layout=\"row\">\n    <div layout layout-align=\"center center\" flex=\"33\" offset=\"33\">\n        <md-input-container>\n            <label>I bind after 200 ms</label>\n            <input id=\"ngModelOptionsInput2\"\n                   data-ng-model=\"ctrl.ngModelOptionsValueDebounce\"\n                   data-ng-model-options=\"{debounce: 200}\">\n        </md-input-container>\n    </div>\n</div>");
$templateCache.put("ngModelOptionsExample.js","vm.ngModelOptionsValueBlur = \'\';\nvm.ngModelOptionsValueDebounce = \'\';\n\n");
$templateCache.put("ngOptionsExample.html","<select data-ng-model=\"ctrl.selectedOption\"\n        data-ng-options=\"option.id as option.label for option in ctrl.selectOptions\">\n</select>");
$templateCache.put("ngOptionsExample.js","vm.selectOptions = [{id: 1, label: \'Option1\'}, {id: 2, label: \'Option2\'}, {id: 3, label: \'Option3\'}];\nvm.selectedOption = 2;\n");
$templateCache.put("ngRepeatExample.data.js","var staticData = [\n    {\n        id: 1,\n        name: \'John\'\n    },\n    {\n        id: 2,\n        name: \'Paul\'\n    },\n    {\n        id: 3,\n        name: \'Sam\'\n    },\n    {\n        id: 4,\n        name: \'Geoff\'\n    },\n    {\n        id: 5,\n        name: \'Jerry\'\n    },\n    {\n        id: 6,\n        name: \'Mark\'\n    }\n];\n");
$templateCache.put("ngRepeatExample.html","<div layout=\"column\" layout-align=\"center center\">\n    <h5 class=\"md-headline\">List of names</h5>\n    <ul>\n        <li class=\"md-title\" data-ng-repeat=\"item in ctrl.dataArray\">{{item.name}}</li>\n    </ul>\n</div>");
$templateCache.put("ngRepeatExample.js","vm.dataArray = mainService.getStaticArray();\n");
$templateCache.put("ngSelectedExample.html","<select>\n    <option>I am the first option.</option>\n    <option>I am the second option.</option>\n    <option data-ng-selected=\"true\">I am the third option and selected.</option>\n    <option>I am the fourth option.</option>\n</select>");
$templateCache.put("ngSubmitExample.html","<form name=\"ctrl.testForm\" data-ng-submit=\"ctrl.submitMe()\" role=\"form\" novalidate>\n\n    <div layout=\"column\" layout-align=\"center center\">\n\n        <span>You have submitted the form {{ctrl.formSubmissions}} times.</span>\n\n        <button type=\"submit\">\n            Submit me\n        </button>\n\n    </div>\n\n</form>");
$templateCache.put("ngSubmitExample.js","vm.formSubmissions = 0;\n\nvm.submitMe = function(){\n    vm.formSubmissions++;\n}");
$templateCache.put("oneTimeBindingExample.html","{{::ctrl.oneTimeBinding}}");
$templateCache.put("oneTimeBindingExample.js","vm.oneTimeBinding =  \'I am a constant and only bound once.\';\n");
$templateCache.put("rootScopeExample.html","");
$templateCache.put("rootScopeExample.js","//The root scope broadcasts the event:\n$rootScope.$broadcast(\"myEvent\");\n\n//Any child Scope can listen for the event:\n$scope.$on(\"myEvent\", function () {\n        $log.log(\'my event occurred\');\n    }\n);");
$templateCache.put("sceExample.html","<div>\n    <label>Input HTML</label>\n    <input type=\"text\" ng-model=\"ctrl.sceInput\">\n</div>\n<div>\n    <button data-ng-click=\"ctrl.renderHtml();\">Render HTML</button>\n</div>\n<div data-ng-bind-html=\"ctrl.sceOutput\"></div>");
$templateCache.put("sceExample.js","vm.sceInput = \'<em>Hello world<em>\'\nvm.sceOutput = undefined;\nvm.renderHtml = renderHtml;\n\nfunction renderHtml() {\n    vm.sceOutput = $sce.trustAsHtml(input)\n}\n");
$templateCache.put("serviceExample.js","(function () {\n    \'use strict\';\n\n    angular.module(\'appModule\').factory(\'staticDataService\', staticDataService);\n\n    staticDataService.$inject = [\'toolsService\'];\n\n    function staticDataService(toolsService) {\n\n        var staticData = [\n            {\n                id: 1,\n                name: \'John\'\n            },\n            {\n                id: 2,\n                name: \'Paul\'\n            }\n        ];\n\n        var serviceApi = {\n            getStaticArray: getStaticArray,\n            addItemToStaticArray: addItemToStaticArray\n        };\n\n        return serviceApi;\n\n        function getStaticArray() {\n            return staticData;\n        }\n\n        function addItemToStaticArray(name) {\n            var data = serviceApi.getStaticArray();\n            var maxIndex = toolsService.getMaxIndex(data);\n            data.push({id: maxIndex + 1, name: name});\n        }\n    }\n})();\n\n\n\n");
$templateCache.put("windowExample.js","(function () {\n    \'use strict\';\n\n    angular.module(\'appModule\').controller(\'DemoController\', DemoController);\n\n    DemoController.$inject = [\'$window\'];\n\n    function DemoController($window) {\n\n        var vm = this;\n\n        vm.navigate = function(){\n            $window.location.href = \'/testpath\';\n        }\n\n    }\n\n})();\n");}]);